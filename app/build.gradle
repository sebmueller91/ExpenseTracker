plugins {
    id("com.android.application")
    id("kotlin-android")
    id("kotlin-kapt")
    id("com.google.devtools.ksp")
}

def getVersionProperties() {
    Properties versionProps = new Properties()
    try {
        File versionPropsFile = file("../version.properties")
        if (versionPropsFile.exists()) {
            versionProps.load(versionPropsFile.newDataInputStream())
        } else {
            println "version.properties file not found"
        }
    } catch (Exception e) {
        println "Error reading version.properties file: " + e.getMessage()
    }
    return versionProps
}

def generateVersionCode(String versionName) {
    if (versionName == null) {
        versionName = "0.0.1"
    }
    def (major, minor, patch) = versionName.tokenize('.').collect { it.toInteger() }
    return major * 10000 + minor * 100 + patch
}

def getFullVersionName() {
    String versionName = "0.0.0"
    try {
        Properties versionProps = getVersionProperties()
        versionName = versionProps.getProperty("version_name", versionName)
    } catch (Exception e) {
        println "Error reading version.properties file: " + e.getMessage()
    }
    return versionName
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

android {
    namespace 'com.example.expensetracker'
    compileSdk 34

    defaultConfig {
        applicationId "com.example.expensetracker"
        minSdk 28
        targetSdk 34
        versionCode generateVersionCode(getVersionProperties().getProperty("version_name"))
        versionName getFullVersionName()

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    signingConfigs {
        release {
            storeFile file('../keystore.jks')
            storePassword System.getenv('KEYSTORE_PASSWORD')
            keyAlias System.getenv('KEY_ALIAS')
            keyPassword System.getenv('KEY_PASSWORD')
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'

            applicationVariants.all { variant ->
                variant.outputs.all {
                    outputFileName = "expenseTracker.apk"
                }
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = '17'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.5.3'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.6.2'
    implementation 'androidx.activity:activity-compose:1.8.1'
    implementation "androidx.compose.ui:ui:$compose_ui_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_ui_version"
    implementation "androidx.navigation:navigation-compose:2.7.5"
    implementation "androidx.lifecycle:lifecycle-runtime-compose:2.6.2"
    implementation 'androidx.compose.material3:material3:1.1.2'

    kapt "androidx.lifecycle:lifecycle-compiler:2.6.2"

    implementation "com.google.accompanist:accompanist-navigation-animation:$accompanistVersion"

    implementation("io.github.raamcosta.compose-destinations:core:1.9.54")
    ksp("io.github.raamcosta.compose-destinations:ksp:1.9.54")

    implementation "androidx.compose.material:material-icons-extended:$compose_ui_version"

    implementation "io.insert-koin:koin-android:3.5.0"
    implementation "io.insert-koin:koin-androidx-compose:3.5.0"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_ui_version"
}